{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Fonction } from \"../../model/Fonction\";\nexport let IssueDetailsComponent = class IssueDetailsComponent {\n  constructor(issueService, route) {\n    this.issueService = issueService;\n    this.route = route;\n    this.mode = 'Edit';\n    this.fonctions = Object.values(Fonction);\n    //this.user=history.state.user;\n    const id_user = Number(this.route.snapshot.paramMap.get(\"id\"));\n    this.userService.getUserById(id_user).subscribe(user => this.user = user);\n    for (let fonction of this.fonctions) {\n      console.log(fonction);\n    }\n  }\n  changeMode() {\n    if (this.mode === \"Edit\") {\n      this.mode = \"Display\";\n    } else {\n      this.mode = \"Edit\";\n    }\n  }\n  updateUser() {\n    console.log(\"update\");\n    this.issueService.update(this.issue).subscribe(() => this.changeMode());\n  }\n};\nIssueDetailsComponent = __decorate([Component({\n  selector: 'app-issue-details',\n  templateUrl: './issue-details.component.html',\n  styleUrls: ['./issue-details.component.css']\n})], IssueDetailsComponent);","map":{"version":3,"names":["Component","Fonction","IssueDetailsComponent","constructor","issueService","route","mode","fonctions","Object","values","id_user","Number","snapshot","paramMap","get","userService","getUserById","subscribe","user","fonction","console","log","changeMode","updateUser","update","issue","__decorate","selector","templateUrl","styleUrls"],"sources":["H:\\IssueTracker-Front\\src\\app\\issue\\issue-details\\issue-details.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport {Fonction} from \"../../model/Fonction\";\r\nimport {Issue} from \"../../model/Issue\";\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-issue-details',\r\n  templateUrl: './issue-details.component.html',\r\n  styleUrls: ['./issue-details.component.css']\r\n})\r\nexport class IssueDetailsComponent {\r\n  issue !: Issue\r\n  mode:String = 'Edit'\r\n  fonctions = Object.values(Fonction)\r\n\r\n  constructor(\r\n    private issueService: IssueService,\r\n    private route: ActivatedRoute ) {\r\n    //this.user=history.state.user;\r\n    const id_user: Number = Number(this.route.snapshot.paramMap.get(\"id\"))\r\n    this.userService.getUserById(id_user).subscribe(user => this.user = user)\r\n    for (let fonction of this.fonctions) {\r\n      console.log(fonction)\r\n    }\r\n  }\r\n  changeMode() {\r\n    if (this.mode===\"Edit\") {\r\n      this.mode = \"Display\"\r\n    } else {\r\n      this.mode = \"Edit\"\r\n    }\r\n  }\r\n\r\n  updateUser() {\r\n    console.log(\"update\")\r\n    this.issueService.update(this.issue).subscribe(()=>this.changeMode());\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAQC,QAAQ,QAAO,sBAAsB;AAUtC,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAKhCC,YACUC,YAA0B,EAC1BC,KAAqB;IADrB,KAAAD,YAAY,GAAZA,YAAY;IACZ,KAAAC,KAAK,GAALA,KAAK;IALf,KAAAC,IAAI,GAAU,MAAM;IACpB,KAAAC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACR,QAAQ,CAAC;IAKjC;IACA,MAAMS,OAAO,GAAWC,MAAM,CAAC,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IACtE,IAAI,CAACC,WAAW,CAACC,WAAW,CAACN,OAAO,CAAC,CAACO,SAAS,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,GAAGA,IAAI,CAAC;IACzE,KAAK,IAAIC,QAAQ,IAAI,IAAI,CAACZ,SAAS,EAAE;MACnCa,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;;EAEzB;EACAG,UAAUA,CAAA;IACR,IAAI,IAAI,CAAChB,IAAI,KAAG,MAAM,EAAE;MACtB,IAAI,CAACA,IAAI,GAAG,SAAS;KACtB,MAAM;MACL,IAAI,CAACA,IAAI,GAAG,MAAM;;EAEtB;EAEAiB,UAAUA,CAAA;IACRH,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,IAAI,CAACjB,YAAY,CAACoB,MAAM,CAAC,IAAI,CAACC,KAAK,CAAC,CAACR,SAAS,CAAC,MAAI,IAAI,CAACK,UAAU,EAAE,CAAC;EACvE;CACD;AA3BYpB,qBAAqB,GAAAwB,UAAA,EALjC1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACW3B,qBAAqB,CA2BjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}