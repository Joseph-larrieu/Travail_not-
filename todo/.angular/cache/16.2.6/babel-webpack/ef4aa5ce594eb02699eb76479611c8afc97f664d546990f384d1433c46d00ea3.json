{"ast":null,"code":"import { Fonction } from \"../../model/Fonction\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/issue.service\";\nimport * as i2 from \"@angular/router\";\nexport class IssueDetailsComponent {\n  constructor(issueService, route) {\n    this.issueService = issueService;\n    this.route = route;\n    this.mode = 'Edit';\n    this.fonctions = Object.values(Fonction);\n    //this.user=history.state.user;\n    const code_issue = Number(this.route.snapshot.paramMap.get(\"id\"));\n    this.issueService.getIssueByCode(code_issue).subscribe(issue => this.issue = issue);\n    for (let fonction of this.fonctions) {\n      console.log(fonction);\n    }\n  }\n  changeMode() {\n    if (this.mode === \"Edit\") {\n      this.mode = \"Display\";\n    } else {\n      this.mode = \"Edit\";\n    }\n  }\n  updateUser() {\n    console.log(\"update\");\n    this.issueService.update(this.issue).subscribe(() => this.changeMode());\n  }\n  static #_ = this.ɵfac = function IssueDetailsComponent_Factory(t) {\n    return new (t || IssueDetailsComponent)(i0.ɵɵdirectiveInject(i1.IssueService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IssueDetailsComponent,\n    selectors: [[\"app-issue-details\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[\"type\", \"button\", 3, \"click\"]],\n    template: function IssueDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function IssueDetailsComponent_Template_button_click_0_listener() {\n          return ctx.changeMode();\n        });\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.mode);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Fonction","IssueDetailsComponent","constructor","issueService","route","mode","fonctions","Object","values","code_issue","Number","snapshot","paramMap","get","getIssueByCode","subscribe","issue","fonction","console","log","changeMode","updateUser","update","_","i0","ɵɵdirectiveInject","i1","IssueService","i2","ActivatedRoute","_2","selectors","decls","vars","consts","template","IssueDetailsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","IssueDetailsComponent_Template_button_click_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate"],"sources":["H:\\IssueTracker-Front\\src\\app\\issue\\issue-details\\issue-details.component.ts","H:\\IssueTracker-Front\\src\\app\\issue\\issue-details\\issue-details.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport {Fonction} from \"../../model/Fonction\";\r\nimport {Issue} from \"../../model/Issue\";\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {IssueService} from \"../../services/issue.service\";\r\n\r\n@Component({\r\n  selector: 'app-issue-details',\r\n  templateUrl: './issue-details.component.html',\r\n  styleUrls: ['./issue-details.component.css']\r\n})\r\nexport class IssueDetailsComponent {\r\n  issue !: Issue\r\n  mode:String = 'Edit'\r\n  fonctions = Object.values(Fonction)\r\n\r\n  constructor(\r\n    private issueService: IssueService,\r\n    private route: ActivatedRoute ) {\r\n    //this.user=history.state.user;\r\n    const code_issue: Number = Number(this.route.snapshot.paramMap.get(\"id\"))\r\n    this.issueService.getIssueByCode(code_issue).subscribe(issue => this.issue = issue)\r\n    for (let fonction of this.fonctions) {\r\n      console.log(fonction)\r\n    }\r\n  }\r\n  changeMode() {\r\n    if (this.mode===\"Edit\") {\r\n      this.mode = \"Display\"\r\n    } else {\r\n      this.mode = \"Edit\"\r\n    }\r\n  }\r\n\r\n  updateUser() {\r\n    console.log(\"update\")\r\n    this.issueService.update(this.issue).subscribe(()=>this.changeMode());\r\n  }\r\n}\r\n","<button type=\"button\" (click)=\"changeMode()\">{{mode}}</button>\r\n"],"mappings":"AACA,SAAQA,QAAQ,QAAO,sBAAsB;;;;AAW7C,OAAM,MAAOC,qBAAqB;EAKhCC,YACUC,YAA0B,EAC1BC,KAAqB;IADrB,KAAAD,YAAY,GAAZA,YAAY;IACZ,KAAAC,KAAK,GAALA,KAAK;IALf,KAAAC,IAAI,GAAU,MAAM;IACpB,KAAAC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACR,QAAQ,CAAC;IAKjC;IACA,MAAMS,UAAU,GAAWC,MAAM,CAAC,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IACzE,IAAI,CAACV,YAAY,CAACW,cAAc,CAACL,UAAU,CAAC,CAACM,SAAS,CAACC,KAAK,IAAI,IAAI,CAACA,KAAK,GAAGA,KAAK,CAAC;IACnF,KAAK,IAAIC,QAAQ,IAAI,IAAI,CAACX,SAAS,EAAE;MACnCY,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;;EAEzB;EACAG,UAAUA,CAAA;IACR,IAAI,IAAI,CAACf,IAAI,KAAG,MAAM,EAAE;MACtB,IAAI,CAACA,IAAI,GAAG,SAAS;KACtB,MAAM;MACL,IAAI,CAACA,IAAI,GAAG,MAAM;;EAEtB;EAEAgB,UAAUA,CAAA;IACRH,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,IAAI,CAAChB,YAAY,CAACmB,MAAM,CAAC,IAAI,CAACN,KAAK,CAAC,CAACD,SAAS,CAAC,MAAI,IAAI,CAACK,UAAU,EAAE,CAAC;EACvE;EAAC,QAAAG,CAAA,G;qBA1BUtB,qBAAqB,EAAAuB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArB7B,qBAAqB;IAAA8B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZlCb,EAAA,CAAAe,cAAA,gBAA6C;QAAvBf,EAAA,CAAAgB,UAAA,mBAAAC,uDAAA;UAAA,OAASH,GAAA,CAAAlB,UAAA,EAAY;QAAA,EAAC;QAACI,EAAA,CAAAkB,MAAA,GAAQ;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;;;QAAjBnB,EAAA,CAAAoB,SAAA,GAAQ;QAARpB,EAAA,CAAAqB,iBAAA,CAAAP,GAAA,CAAAjC,IAAA,CAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}